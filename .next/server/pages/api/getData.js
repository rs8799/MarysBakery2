"use strict";(()=>{var e={};e.id=336,e.ids=[336],e.modules={145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},1979:(e,n,r)=>{r.r(n),r.d(n,{config:()=>g,default:()=>p,routeModule:()=>f});var o={};r.r(o),r.d(o,{default:()=>handler});var t=r(1802),a=r(7153),i=r(6249);let l=require("mongoose");var s=r.n(l);let c=process.env.MONGODB_URI;if(!c)throw Error("Please define the MONGODB_URI environment variable inside .env.local");let u=global.mongoose;async function dbConnect(){if(u.conn)return u.conn;u.promise||(u.promise=s().connect(c,{bufferCommands:!1}).then(e=>e));try{u.conn=await u.promise}catch(e){throw u.promise=null,e}return u.conn}u||(u=global.mongoose={conn:null,promise:null});let d=dbConnect;new(s()).Schema({title:String,price:Number,coverImg:String,rating:Number,reviewCount:Number,location:String,openSpots:Number});let m=s().model("cakesModel",m);async function handler(e,n){await d();try{let e=await m.find({});n.status(200).json({data:e})}catch(e){console.error(e),n.status(500).json({error:"Internal Server Error"})}}let p=(0,i.l)(o,"default"),g=(0,i.l)(o,"config"),f=new t.PagesAPIRouteModule({definition:{kind:a.x.PAGES_API,page:"/api/getData",pathname:"/api/getData",bundlePath:"",filename:""},userland:o})}};var n=require("../../webpack-api-runtime.js");n.C(e);var __webpack_exec__=e=>n(n.s=e),r=n.X(0,[222],()=>__webpack_exec__(1979));module.exports=r})();